# -*- coding: utf-8 -*-
"""5(7)_Current_date_and_time_should_be_recorded_with_the_MP3_answers.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gwVoHReaACa7--9EJGUCJvt_ZhroGU_9
"""

import os
import re
from datetime import datetime
from pymongo import MongoClient

# MongoDB connection setup
client = MongoClient('mongodb://localhost:27017/')
db = client['your_database_name']
observations_collection = db['Observations']

# Function to extract date and time from the filename
def extract_date_time_from_filename(filename):
    # Assuming filename format: filename_version_YYYY-MM-DD_HH-MM-SS.mp3
    match = re.match(r".+_(\d{4}-\d{2}-\d{2})_(\d{2}-\d{2}-\d{2})\.mp3", filename)
    if match:
        date_str = match.group(1)  # Extracted date (YYYY-MM-DD)
        time_str = match.group(2)  # Extracted time (HH-MM-SS)
        return date_str, time_str
    return None, None

# Function to upload MP3 file information to MongoDB
def upload_mp3_to_mongo(mp3_file_path):
    # Extract filename from the path
    filename = os.path.basename(mp3_file_path)

    # Extract date and time from the filename
    date_str, time_str = extract_date_time_from_filename(filename)

    if date_str and time_str:
        # Prepare the data to be stored in MongoDB
        observation_data = {
            "filename": filename,
            "file_date": date_str,   # Date extracted from filename
            "file_time": time_str,   # Time extracted from filename
            "mp3_file_path": mp3_file_path  # Path to the MP3 file
        }

        # Insert the observation data into MongoDB
        observations_collection.insert_one(observation_data)

        print(f"MP3 {filename} uploaded to MongoDB with date {date_str} and time {time_str}")
    else:
        print(f"Failed to extract date and time from filename: {filename}")

# Function to process all MP3 files in a specific folder
def process_mp3_folder(folder_path):
    # Iterate over all files in the folder
    for file_name in os.listdir(folder_path):
        # Check if the file is an MP3 file
        if file_name.endswith('.mp3'):
            mp3_file_path = os.path.join(folder_path, file_name)
            upload_mp3_to_mongo(mp3_file_path)

# Example usage: Specify the path to the folder containing the MP3 files
folder_path = '/path/to/AIVoiceobservations/'

# Process all MP3 files in the folder
process_mp3_folder(folder_path)