# -*- coding: utf-8 -*-
"""1(4)_MP3_checklist_questions_from_Mongo_database.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p2Egw3ej9Vk068GvaGl-Flg6TbozkVTL

# Connecting to the RFO Database - SQL Server
"""

!pip install pymssql

import pymssql

# MSSQL Connection details
mssql_server = 'rfocentral02.database.windows.net'
mssql_database = 'RFOCentral_Dev3'
mssql_username = 'AiProjectTestUser'
mssql_password = '7GJ407c^uOY['
mssql_table = 'AttachmentXRef'

# Function to connect to MSSQL using pymssql and check connection
def connect_to_mssql():
    try:
        # Establish connection
        connection = pymssql.connect(
            server=mssql_server,
            user=mssql_username,
            password=mssql_password,
            database=mssql_database
        )

        # Create a cursor and execute a simple query to check connection
        cursor = connection.cursor()
        cursor.execute("SELECT 1")  # Simple query to test the connection
        result = cursor.fetchone()

        # Check if the query returned a result
        if result:
            print("Successfully connected to MSSQL!")
            return connection, cursor
        else:
            print("Connection check failed.")
            return None, None

    except Exception as e:
        print(f"Error connecting to MSSQL: {e}")
        return None, None

# Call the function to test the connection
connection, cursor = connect_to_mssql()
if connection:
    # Connection is successful, proceed with your operations
    print("Ready to interact with MSSQL.")
else:
    # Connection failed, handle the error
    print("Unable to connect to MSSQL.")

"""# Connecting the MongoDB (AI - Database)"""

!pip install pymongo pdf2image pytesseract easyocr gTTS pydub

import os
from pymongo import MongoClient
import gridfs
import pymssql

# MongoDB Connection URI
mongo_uri = "mongodb+srv://AIDatabase:BTColombia2022@sandbox.bxohv.mongodb.net/?retryWrites=true&w=majority&appName=sandbox"
mongo_db_name = "AIDatabase"
mongo_collection = "fs.files"  # Specify the collection name

# Connect to MongoDB
try:
    client = MongoClient(mongo_uri)
    db = client['AIDatabase']  # Replace with your database name
    fs = gridfs.GridFS(db)     # For storing files in MongoDB
    print("Successfully connected to MongoDB!")
except Exception as e:
    print(f"Error connecting to MongoDB: {e}")
    exit()

"""# Integrating the new MP3 Files into the RFO Central database"""

import pymssql
from pymongo import MongoClient
import gridfs


def fetch_mp3_files_from_mongo():
    """Fetch MP3 files and filenames from the specified MongoDB collection."""
    try:
        # Connect to MongoDB
        client = MongoClient(mongo_uri)
        db = client[mongo_db_name]
        collection = db[mongo_collection]
        fs = gridfs.GridFS(db)

        # Retrieve MP3 files and filenames from MongoDB
        mp3_files = []
        for file in collection.find({"mp3_filename": {"$exists": True}}):  # Ensure mp3_filename exists
            mp3_files.append({
                "filename": file["mp3_filename"],
                "data": fs.get(file["_id"]).read()
            })
        print(f"Fetched {len(mp3_files)} MP3 files from MongoDB.")
        return mp3_files

    except Exception as e:
        print(f"Error fetching MP3 files from MongoDB: {e}")
        return []

def insert_mp3_into_sql(mp3_files):
    """Insert MP3 files into the SQL Server table."""
    try:
        # Connect to SQL Server
        conn = pymssql.connect(
            server=mssql_server,
            user=mssql_username,
            password=mssql_password,
            database=mssql_database
        )
        cursor = conn.cursor()

        for mp3_file in mp3_files:
            if not mp3_file["filename"] or not mp3_file["data"]:
                print(f"Skipping record with missing data: {mp3_file}")
                continue

            # Insert only if the file doesn't already exist
            query = f"""
            IF NOT EXISTS (
                SELECT 1 FROM {mssql_table}
                WHERE FileName = %s
            )
            BEGIN
                INSERT INTO {mssql_table} (mp3_binary, FileName)
                VALUES (CONVERT(VARBINARY(MAX), %s), %s)
            END
            """
            cursor.execute(query, (mp3_file["filename"], mp3_file["data"], mp3_file["filename"]))
            print(f"Inserted {mp3_file['filename']} into SQL Server.")

        conn.commit()
        print("All MP3 files inserted successfully.")

    except pymssql.Error as e:
        print(f"Error inserting MP3 files into SQL Server: {e}")

    finally:
        conn.close()

def main():
    """Main process to fetch and insert MP3 files."""
    mp3_files = fetch_mp3_files_from_mongo()
    if mp3_files:
        insert_mp3_into_sql(mp3_files)
    else:
        print("No MP3 files found to insert.")

if __name__ == "__main__":
    main()